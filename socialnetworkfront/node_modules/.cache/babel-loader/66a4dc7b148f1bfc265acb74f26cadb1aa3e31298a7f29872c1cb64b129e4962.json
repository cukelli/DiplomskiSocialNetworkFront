{"ast":null,"code":"import UpdatedUserInfo from \"../model/UpdatedUserInfo\";\nfunction setToken(token) {\n  localStorage.setItem('token', token);\n}\nfunction getToken() {\n  return localStorage.getItem('token');\n}\nasync function loginUser(credentials) {\n  return fetch('http://localhost:9000/api/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials),\n    mode: 'cors'\n  }).then(data => data.json()).then(response => {\n    setToken(response.token);\n    return response;\n  }).catch(error => console.error('Fetch error:', error));\n}\nasync function registerUser(userData) {\n  return fetch('http://localhost:9000/api/registration', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData),\n    mode: 'cors'\n  }).then(data => data.json()).then(response => {\n    console.log(response);\n    return response;\n  }).catch(error => console.error('Fetch error:', error));\n}\nasync function getCurrentUser() {\n  const token = getToken();\n  if (!token) {\n    console.error('Token not found');\n    return null;\n  }\n  const tokenWithoutDoubleQuotes = token.replace(/^\"(.*)\"$/, '$1');\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${tokenWithoutDoubleQuotes}`\n  };\n  try {\n    const response = await fetch('http://localhost:9000/api/get/user', {\n      method: 'GET',\n      headers: headers,\n      mode: 'cors'\n    });\n    if (!response.ok) {\n      console.log(response);\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const user = await response.json();\n    console.log('User:', user);\n    return user;\n  } catch (error) {\n    console.error('Fetch error:', error);\n    throw error;\n  }\n}\nasync function getDefaultProfilePicture() {\n  const token = getToken();\n  if (!token) {\n    return null;\n  }\n  const tokenWithoutDoubleQuotes = token.replace(/^\"(.*)\"$/, '$1');\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${tokenWithoutDoubleQuotes}`\n  };\n  try {\n    const response = await fetch('http://localhost:9000/assets/images/avatar.jpg', {\n      method: 'GET',\n      headers: headers,\n      mode: 'cors'\n    });\n    if (!response.ok) {\n      console.log(response);\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const imageUrl = response.url;\n    console.log('Profile Picture URL:', imageUrl);\n    return imageUrl;\n  } catch (error) {\n    console.error('Fetch error:', error);\n    throw error;\n  }\n}\nasync function editUserInfo() {\n  const token = getToken();\n  if (!token) {\n    return null;\n  }\n  const tokenWithoutDoubleQuotes = token.replace(/^\"(.*)\"$/, '$1');\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${tokenWithoutDoubleQuotes}`\n  };\n  try {\n    const response = await fetch('http://localhost:9000/api/profile/update', {\n      method: 'PUT',\n      headers: headers,\n      mode: 'cors',\n      body: JSON.stringify(UpdatedUserInfo)\n    });\n    if (!response.ok) {\n      console.log(response);\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const result = await response.json();\n    // console.log('Edit User Info Result:', result);\n    return result;\n  } catch (error) {\n    console.error('Fetch error:', error);\n    throw error;\n  }\n}\nexport { setToken, getToken, loginUser, registerUser, getCurrentUser, getDefaultProfilePicture, editUserInfo };","map":{"version":3,"names":["UpdatedUserInfo","setToken","token","localStorage","setItem","getToken","getItem","loginUser","credentials","fetch","method","headers","body","JSON","stringify","mode","then","data","json","response","catch","error","console","registerUser","userData","log","getCurrentUser","tokenWithoutDoubleQuotes","replace","ok","Error","status","user","getDefaultProfilePicture","Authorization","imageUrl","url","editUserInfo","result"],"sources":["D:/Fax/III godina/praksa/praksa-anastasijacukelj-frontend/socialnetworkfront/src/service/BackendService.js"],"sourcesContent":["import UpdatedUserInfo from \"../model/UpdatedUserInfo\";\r\n\r\n\r\n\r\n\r\nfunction setToken(token) {\r\n    localStorage.setItem('token', token);\r\n  }\r\n  \r\n  function getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n  \r\n  async function loginUser(credentials) {\r\n    return fetch('http://localhost:9000/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(credentials),\r\n      mode: 'cors',\r\n    })\r\n      .then((data) => data.json())\r\n      .then((response) => {\r\n        setToken(response.token); \r\n        return response;\r\n      })\r\n      .catch((error) => console.error('Fetch error:', error));\r\n  }\r\n  \r\n\r\n  async function registerUser(userData) {\r\n  return fetch('http://localhost:9000/api/registration', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n    mode: 'cors',\r\n  })\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      console.log(response);\r\n      return response;\r\n    })\r\n    .catch((error) => console.error('Fetch error:', error));\r\n}\r\n\r\n\r\nasync function getCurrentUser() {\r\n  const token = getToken();\r\n\r\n  if (!token) {\r\n    console.error('Token not found');\r\n    return null; \r\n  }\r\n\r\n  const tokenWithoutDoubleQuotes = token.replace(/^\"(.*)\"$/, '$1');\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${tokenWithoutDoubleQuotes}`,\r\n  };\r\n  \r\n\r\n  try {\r\n    const response = await fetch('http://localhost:9000/api/get/user', {\r\n      method: 'GET',\r\n      headers: headers,\r\n      mode: 'cors', \r\n\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.log(response)\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    const user = await response.json();\r\n    console.log('User:', user);\r\n\r\n    return user;\r\n  } catch (error) {\r\n    console.error('Fetch error:', error);\r\n    throw error; \r\n  }\r\n}\r\n\r\n\r\n\r\nasync function getDefaultProfilePicture() {\r\n  const token = getToken();\r\n\r\n  if (!token) {\r\n    return null;\r\n  }\r\n\r\n  const tokenWithoutDoubleQuotes = token.replace(/^\"(.*)\"$/, '$1');\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${tokenWithoutDoubleQuotes}`,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch('http://localhost:9000/assets/images/avatar.jpg', {\r\n      method: 'GET',\r\n      headers: headers,\r\n      mode: 'cors',\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.log(response);\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    const imageUrl = response.url;\r\n    console.log('Profile Picture URL:', imageUrl);\r\n\r\n    return imageUrl;\r\n  } catch (error) {\r\n    console.error('Fetch error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\nasync function editUserInfo() {\r\n  const token = getToken();\r\n\r\n  if (!token) {\r\n    return null;\r\n  }\r\n  const tokenWithoutDoubleQuotes = token.replace(/^\"(.*)\"$/, '$1');\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${tokenWithoutDoubleQuotes}`,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch('http://localhost:9000/api/profile/update', {\r\n      method: 'PUT',\r\n      headers: headers,\r\n      mode: 'cors',\r\n      body: JSON.stringify(UpdatedUserInfo)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.log(response);\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    \r\n    const result = await response.json();\r\n   // console.log('Edit User Info Result:', result);\r\n    return result;\r\n\r\n  } catch (error) {\r\n    console.error('Fetch error:', error);\r\n    throw error;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n  export { setToken, getToken, loginUser, registerUser, getCurrentUser, getDefaultProfilePicture, editUserInfo };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}