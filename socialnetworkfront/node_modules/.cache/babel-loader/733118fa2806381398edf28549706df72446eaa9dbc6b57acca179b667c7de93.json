{"ast":null,"code":"function setToken(token) {\n  localStorage.setItem('token', token);\n}\nfunction getToken() {\n  return localStorage.getItem('token');\n}\nasync function loginUser(credentials) {\n  return fetch('http://localhost:9000/api/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials),\n    mode: 'cors'\n  }).then(data => data.json()).then(response => {\n    setToken(response.token);\n    console.log(response);\n    return response;\n  }).catch(error => console.error('Fetch error:', error));\n}\nasync function registerUser(userData) {\n  return fetch('http://localhost:9000/api/registration', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData),\n    mode: 'cors'\n  }).then(data => data.json()).then(response => {\n    console.log(response);\n    return response;\n  }).catch(error => console.error('Fetch error:', error));\n}\nexport { setToken, getToken, loginUser, registerUser };","map":{"version":3,"names":["setToken","token","localStorage","setItem","getToken","getItem","loginUser","credentials","fetch","method","headers","body","JSON","stringify","mode","then","data","json","response","console","log","catch","error","registerUser","userData"],"sources":["D:/Fax/III godina/praksa/praksa-anastasijacukelj-frontend/socialnetworkfront/src/service/AuthService.js"],"sourcesContent":["function setToken(token) {\r\n    localStorage.setItem('token', token);\r\n  }\r\n  \r\n  function getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n  \r\n  async function loginUser(credentials) {\r\n    return fetch('http://localhost:9000/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(credentials),\r\n      mode: 'cors',\r\n    })\r\n      .then((data) => data.json())\r\n      .then((response) => {\r\n        setToken(response.token);\r\n        console.log(response);\r\n        return response;\r\n      })\r\n      .catch((error) => console.error('Fetch error:', error));\r\n  }\r\n\r\n  async function registerUser(userData) {\r\n  return fetch('http://localhost:9000/api/registration', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n    mode: 'cors',\r\n  })\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      console.log(response);\r\n      return response;\r\n    })\r\n    .catch((error) => console.error('Fetch error:', error));\r\n}\r\n    \r\n  export { setToken, getToken, loginUser, registerUser };"],"mappings":"AAAA,SAASA,QAAQA,CAACC,KAAK,EAAE;EACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;AACtC;AAEA,SAASG,QAAQA,CAAA,EAAG;EAClB,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;AACtC;AAEA,eAAeC,SAASA,CAACC,WAAW,EAAE;EACpC,OAAOC,KAAK,CAAC,iCAAiC,EAAE;IAC9CC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC;IACjCO,IAAI,EAAE;EACR,CAAC,CAAC,CACCC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,QAAQ,IAAK;IAClBlB,QAAQ,CAACkB,QAAQ,CAACjB,KAAK,CAAC;IACxBkB,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,CAAC;AAC3D;AAEA,eAAeC,YAAYA,CAACC,QAAQ,EAAE;EACtC,OAAOhB,KAAK,CAAC,wCAAwC,EAAE;IACrDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACW,QAAQ,CAAC;IAC9BV,IAAI,EAAE;EACR,CAAC,CAAC,CACCC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,QAAQ,IAAK;IAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,CAAC;AAC3D;AAEE,SAAStB,QAAQ,EAAEI,QAAQ,EAAEE,SAAS,EAAEiB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}